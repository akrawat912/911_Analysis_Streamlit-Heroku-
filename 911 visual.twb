<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='911' inline='true' name='federated.0xiqyu91plgu5x19he2vd1c3c9u1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='911' name='textscan.1rcjkt014zrkg416criut0axaj23'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/aakash/Documents/notebook workspace/new 2020/Hands on real data/911 portfolio/911.csv' dataRefreshTime='' directory='C:/Users/aakash/Documents/notebook workspace/new 2020/Hands on real data/911 portfolio' filename='C:/Users/aakash/AppData/Local/Temp/TableauTemp/1p6maun0plny4r1d0jy6x0j1l1o6/911.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rcjkt014zrkg416criut0axaj23' name='911.csv' table='[911#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:I10001:no:A1:I10001:1' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='lat' ordinal='0' />
            <column datatype='real' name='lng' ordinal='1' />
            <column datatype='string' name='desc' ordinal='2' />
            <column datatype='integer' name='zip' ordinal='3' />
            <column datatype='string' name='title' ordinal='4' />
            <column datatype='datetime' name='timeStamp' ordinal='5' />
            <column datatype='string' name='twp' ordinal='6' />
            <column datatype='string' name='addr' ordinal='7' />
            <column datatype='integer' name='e' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[desc]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>desc</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeStamp</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timeStamp]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>timeStamp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>twp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[twp]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>twp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>addr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[addr]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>addr</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>e</remote-name>
            <remote-type>20</remote-type>
            <local-name>[e]</local-name>
            <parent-name>[911.csv]</parent-name>
            <remote-alias>e</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[911.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>48660</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Addr' datatype='string' name='[addr]' role='dimension' type='nominal' />
      <column caption='Desc' datatype='string' name='[desc]' role='dimension' type='nominal' />
      <column caption='E' datatype='integer' name='[e]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Time Stamp' datatype='datetime' name='[timeStamp]' role='dimension' type='ordinal' />
      <column caption='Title - Split 1' datatype='string' name='[title - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[title]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [title], &quot;:&quot;, 1 ) )' />
      </column>
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Twp' datatype='string' name='[twp]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:title - Split 2:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ASSAULT VICTIM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FIRE ALARM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RESCUE - TECHNICAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DIABETIC EMERGENCY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MATERNITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UNCONSCIOUS SUBJECT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALTERED MENTAL STATUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ELECTROCUTION&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLANE CRASH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VEHICLE ACCIDENT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BURN VICTIM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GAS-ODOR/LEAK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEIZURES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BACK PAINS/INJURY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FIRE INVESTIGATION&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RESCUE - WATER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AMPUTATION&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EYE INJURY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;POISONING&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VEHICLE FIRE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DEBRIS/FLUIDS ON HIGHWAY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INDUSTRIAL ACCIDENT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TRAIN CRASH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABDOMINAL PAINS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DISABLED VEHICLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MEDICAL ALERT ALARM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNKNOWN MEDICAL EMERGENCY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHOKING&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HEAT EXHAUSTION&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUSPICIOUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ANIMAL BITE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FALL VICTIM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RESCUE - ELEVATOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WARRANT SERVICE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CARBON MONOXIDE DETECTOR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GENERAL WEAKNESS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SHOOTING&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CARDIAC ARREST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HAZARDOUS MATERIALS INCIDENT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STABBING&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CVA/STROKE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HEMORRHAGING&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SYNCOPAL EPISODE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DEHYDRATION&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LACERATIONS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TRANSFERRED CALL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BOMB DEVICE FOUND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FIRE SPECIAL SERVICE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RESPIRATORY EMERGENCY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;APPLIANCE FIRE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FEVER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RESCUE - GENERAL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WOODS/FIELD FIRE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ACTIVE SHOOTER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DIZZINESS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NAUSEA/VOMITING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UNKNOWN TYPE FIRE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CARDIAC EMERGENCY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HEAD INJURY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUBJECT IN PAIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUILDING FIRE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRACTURE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S/B AT HELICOPTER LANDING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALLERGIC REACTION&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DROWNING&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OVERDOSE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UNRESPONSIVE SUBJECT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='top reason'>
      <table>
        <view>
          <datasources>
            <datasource caption='911' name='federated.0xiqyu91plgu5x19he2vd1c3c9u1' />
          </datasources>
          <datasource-dependencies datasource='federated.0xiqyu91plgu5x19he2vd1c3c9u1'>
            <column-instance column='[title - Split 1]' derivation='Count' name='[cnt:title - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='Title - Split 1' datatype='string' name='[title - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[title]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [title], &quot;:&quot;, 1 ) )' />
            </column>
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[cnt:title - Split 1:qk]</rows>
        <cols>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:title - Split 1:nk]</cols>
      </table>
      <simple-id uuid='{57BD6689-A52A-41B5-97DD-6A6BD4446985}' />
    </worksheet>
    <worksheet name='zip in map'>
      <table>
        <view>
          <datasources>
            <datasource caption='911' name='federated.0xiqyu91plgu5x19he2vd1c3c9u1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xiqyu91plgu5x19he2vd1c3c9u1'>
            <column-instance column='[zip]' derivation='None' name='[none:zip:ok]' pivot='key' type='ordinal' />
            <column aggregation='None' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]'>
            <groupfilter from='17752' function='range' level='[none:zip:ok]' to='77316' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[Longitude (generated)]' field-type='quantitative' max='-8269560.6305357767' min='-8501033.9359042831' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[Latitude (generated)]' field-type='quantitative' max='4958426.3037917428' min='4844477.5479327301' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]' value='false' />
            <format attr='break-on-special' field='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[Latitude (generated)]</rows>
        <cols>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8AA9F7D7-DF79-43DF-9DCE-44D567710FCB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='top reason'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:title - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F70C4F41-A5E5-46C0-903E-35AF71D61935}' />
    </window>
    <window class='worksheet' maximized='true' name='zip in map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[cnt:title - Split 1:qk]</field>
            <field>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:addr:nk]</field>
            <field>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:title - Split 2:nk]</field>
            <field>[federated.0xiqyu91plgu5x19he2vd1c3c9u1].[none:zip:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8ED6CA36-3948-4636-A15B-2EF94998AA2F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='top reason' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='zip in map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
